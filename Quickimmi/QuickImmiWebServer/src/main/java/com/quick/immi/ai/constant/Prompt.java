/* (C) 2024 */
package com.quick.immi.ai.constant;

public class Prompt {

  public static final String EXTRACT_PASSPORT_INFO_PROMPT =
      "Given the contents of a identification data, analyze the information to populate the provided JSON schema accurately. \n"
          + "  Data Provided:\n"
          + "  %s \n"
          + "  JSON Schema to Populate:\n"
          + "  {\n"
          + "    \"idNumber\": \"\",\n"
          + "    \"firstName\": \"\",\n"
          + "    \"middleName\": \"\",\n"
          + "    \"lastName\": \"\",\n"
          + "    \"countryCode:\": \"\",\n"
          + "    \"birthDate\": \"\",\n"
          + "    \"birthPlace\": \"\",\n"
          + "    \"nationality\": \"\",\n"
          + "    \"gender\": \"\",\n"
          + "    \"expireDate\": \"\"\n"
          + "  }\n"
          + "\n"
          + "  Output:\n"
          + "  The output should be a JSON object and enclosed in curly braces.\n"
          + "\n"
          + "  Instructions:\n"
          + "  1. Translate any non-English characters in names and place names to English.\n"
          + "  2. Format all dates into the format \"mm/dd/yyyy\".\n"
          + "  3. Adjust the order of names to match the naming conventions of the passport's country of origin. If the passport originates from a country that typically lists the family name before the given name, adjust the name order accordingly.\n"
          + "  4. Format the birthplace as 'Location, Country' as specified in the passport.\n"
          + "  5. Ensure the gender is returned as \"Female\" or \"Male\".\n"
          + "  6. Extract the countryCode and replace it with the full country name for the countryCode field.\n";

  public static final String EXTRACT_MARRIAGE_LICENSE_INFO_PROMPT =
      "Analyze the provided marriage license content and populate the following JSON schema accurately. \n"
          + "  Data Provided:\n"
          + "  %s \n"
          + "  JSON Schema to Populate:\n"
          + "  {\n"
          + "    \"licenseHolder\": \"\",\n"
          + "    \"registrationDate\": \"\",\n"
          + "    \"licenseNumber\": \"\",\n"
          + "    \"holderName\": \"\",\n"
          + "    \"gender:\": \"\",\n"
          + "    \"nationality\": \"\",\n"
          + "    \"birthDate\": \"\",\n"
          + "    \"idNumber\": \"\",\n"
          + "    \"spouseName\": \"\",\n"
          + "    \"spouseGender\": \"\"\n"
          + "    \"spouseNationality\": \"\"\n"
          + "    \"spouseBirthDate\": \"\"\n"
          + "    \"spouseIdNumber\": \"\"\n"
          + "    \"seal\": \"\"\n"
          + "  }\n"
          + "\n"
          + "  Instructions:\n"
          + "  1. Translate any non-English characters in names and place names to English.\n"
          + "  2. Format all dates into the format \"mm/dd/yyyy\".\n"
          + "  3. Format the name as the complete name as 'firstName  middleName lastName')\n"
          + "  4. Use 'Chinese' as the nationality if 'China' or 'Chinese' is mentioned. Same for the other countries.\n"
          + "  5. Found the marriage license id and date and map them to licenseNumber and registrationDate respectively.\n"
          + "  6. Map the first person information by fulfilling the name to both licenseHolder and holderName, and fulfilling gender, nationality, birthDate, idNumber \n"
          + "  7. Map the second person information by fulfilling the name to spouseName, and fulfilling spouseGender, spouseNationality, spouseBirthDate, spouseIdNumber\n"
          + "  8. Format the Seal as 'City, District, Civil Affairs Bureau, Special Seal for Marriage and Oath'\n"
          + "  9. Ensure the gender is returned as \"Female\" or \"Male\".\n"
          + "  10. Make sure the return json should use the schema provided above.\n"
          + "  11. Leave any fields without available data empty.\n";
}
