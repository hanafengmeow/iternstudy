plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '5.0.0'
}

group = 'com.quick.immi.ai'
version = '0.1.1-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    gradlePluginPortal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'software.amazon.awssdk:sdk-core:2.24.5'
    implementation 'software.amazon.awssdk:elasticache:2.24.5'
    implementation 'com.amazonaws:aws-java-sdk-cognitoidp:1.12.661'
    implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.472' // Or the latest version available
    implementation("com.amazonaws:aws-java-sdk-ses:1.12.691")
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.6.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.6.3'
    implementation 'com.amazonaws:aws-java-sdk-elasticache:1.12.664'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.30.2' // JWK handling library
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2"
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.5.5'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:1.0.12'
    implementation 'com.amazonaws:aws-java-sdk-rds:1.12.429' // AWS SDK for Amazon RDS (for Aurora MySQL)
    implementation 'software.amazon.awssdk:secretsmanager:2.24.5'
//    implementation("io.awspring.cloud:spring-cloud-aws-dependencies:3.1.0")
    implementation 'com.amazonaws:aws-java-sdk-cognitoidentity:1.12.661'
    implementation 'com.stripe:stripe-java:24.16.0'
    implementation 'software.amazon.awssdk:s3:2.17.23'
    implementation("com.theokanning.openai-gpt3-java:service:0.18.2")
    implementation("com.google.code.gson:gson:2.10.1")
    implementation("com.azure:azure-sdk-bom:1.2.21")
    implementation("com.azure:azure-ai-formrecognizer:4.1.5")
    implementation("com.google.guava:guava:33.0.0-jre")
    implementation("org.seleniumhq.selenium:selenium-java:4.19.1")
    implementation("io.github.bonigarcia:webdrivermanager:5.8.0")
    implementation("org.apache.httpcomponents.client5:httpclient5:5.3")
    implementation 'com.amazonaws:aws-java-sdk-sqs:1.12.565'
    implementation("com.diffplug.spotless:spotless-lib:2.43.1")
    implementation("com.diffplug.spotless:spotless-plugin-gradle:6.25.0")
    implementation 'com.docusign:docusign-esign-java:3.18.0'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.2'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.quick.immi.ai.Application'
    }
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.gradle', '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces(3) // or spaces. Takes an integer argument if you don't like 4
        endWithNewline()
        setEncoding('utf-8')
    }
    java {
        importOrder('java|javax', 'com.acme', '', '\\#com.acme', '\\#')
        removeUnusedImports()
        // Choose one of these formatters.
        googleJavaFormat()   // has its own section below
//        eclipse()            // has its own section below
//        prettier()           // has its own section below
//        clangFormat()        // has its own section below
        licenseHeader '/* (C) $YEAR */'
    }
}

tasks.register('updateGitHooks', Copy) {
    from 'pre-commit'
    into './.git/hooks'
}

compileJava.dependsOn updateGitHooks
